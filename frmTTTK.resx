<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Cap_Nhat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>